<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Myth on dromara(Open source organization)</title><link>/zh/projects/myth/</link><description>Recent content in Myth on dromara(Open source organization)</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="/zh/projects/myth/index.xml" rel="self" type="application/rss+xml"/><item><title>Dubbo 快速开始</title><link>/zh/projects/myth/quick-start-dubbo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/myth/quick-start-dubbo/</guid><description>cd https://github.com/yu199195/myth/tree/master/myth-demo/myth-demo-dubbo Modifiy application.yml on Indicator Item And Modifiy you jdbc url And choose you Message Oriented Middleware spring: datasource: driver-class-name: com.mysql.jdbc.Driver url: jdbc:mysql://192.168.1.68:3306/myth_account?useUnicode=true&amp;amp;characterEncoding=utf8 username: xiaoyu password: Wgj@555888 #activemq: # broker-url: tcp://120.76.52.162:61616 # user: happylife # password: happylifeplat01 # trust-all: true #rabbitmq: # host: localhost # port: 5672 # username: guest # password: guest rocketmq: namesrvAddr: 192.168.1.148:9876 consumerGroupName: account instanceName: account #kafka: # consumer: # bootstrap-servers: localhost:9092 # group-id: test</description></item><item><title>Dubbo 用户</title><link>/zh/projects/myth/dubbo-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/myth/dubbo-user/</guid><description>在dubbo api 项目引入myth-annotation jar包 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.github.myth&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;myth-annotation&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 在dubbo interface 方法上加上@Myth注解 ,并设置消息队列名称,此队列就是消</description></item><item><title>Motan 快速开始</title><link>/zh/projects/myth/quick-start-motan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/myth/quick-start-motan/</guid><description>cd https://github.com/yu199195/myth/tree/master/myth-demo/myth-demo-motan Modifiy application.yml on Indicator Item And Modifiy you jdbc url And zookeeper url And choose you Message Oriented Middleware spring: motan: zookeeper: 192.168.1.148:2181 datasource: driver-class-name: com.mysql.jdbc.Driver url: jdbc:mysql://192.168.1.68:3306/myth_account?useUnicode=true&amp;amp;characterEncoding=utf8 username: xiaoyu password: Wgj@555888 #activemq: # broker-url: tcp://120.76.52.162:61616 # user: happylife # password: happylifeplat01 # trust-all: true #rabbitmq: # host: localhost # port: 5672 # username: guest # password: guest rocketmq: namesrvAddr: 192.168.1.148:9876 consumerGroupName: account instanceName: account #kafka: # consumer:</description></item><item><title>Motan 用户</title><link>/zh/projects/myth/motan-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/myth/motan-user/</guid><description>在motan api 项目引入myth-annotation jar包 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.github.myth&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;myth-annotation&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 在motan interface 方法上加上@Myth注解 ,并设置消息队列名称,此队列就是消</description></item><item><title>Myth 介绍</title><link>/zh/projects/myth/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/myth/overview/</guid><description>采用消息队列解决分布式事务的开源框架, 基于java语言来开发（JDK1.8），支持dubbo，springcloud,motan等rpc框架</description></item><item><title>Myth 配置</title><link>/zh/projects/myth/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/myth/config/</guid><description>注解源码解析 /** * myth分布式事务框架注解 */ @Retention(RetentionPolicy.RUNTIME) @Target({ElementType.METHOD}) public @interface Myth { /** * The destination name for this listener, resolved through the container-wide */ String destination(); /** * 目标接口类 * 如果是springcloud用户，需要</description></item><item><title>Myth-admin 启动教程</title><link>/zh/projects/myth/start-myth-admin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/myth/start-myth-admin/</guid><description>启动前提：分布式事务项目已经部署并且运行起来，用户根据自己的RPC框架进行使用 首先用户使用的JDK必须是1.8+ 本地安装了git ,maven ，执行以下</description></item><item><title>SpringCloud 用户</title><link>/zh/projects/myth/springcloud-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/myth/springcloud-user/</guid><description>在springcloud 服务提供方（事务的参与方法，被调用方） 引入myth-springcloud 包 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.github.myth&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;myth-springcloud&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 配置 MythTransactio</description></item><item><title>SpringCloud快速开始</title><link>/zh/projects/myth/quick-start-springcloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/myth/quick-start-springcloud/</guid><description>cd https://github.com/yu199195/myth/tree/master/myth-demo/myth-demo-springcloud run EurekaServerApplication.java Modifiy application.yml on Indicator Item And Modifiy you jdbc url And choose you Message Oriented Middleware spring: datasource: driver-class-name: com.mysql.jdbc.Driver url: jdbc:mysql://192.168.1.68:3306/myth_account?useUnicode=true&amp;amp;characterEncoding=utf8 username: xiaoyu password: Wgj@555888 #activemq: # broker-url: tcp://120.76.52.162:61616 # user: happylife # password: happylifeplat01 # trust-all: true #rabbitmq: # host: localhost # port: 5672 # username: guest # password: guest rocketmq: namesrvAddr: 192.168.1.148:9876 consumerGroupName: account instanceName: account #kafka: # consumer: # bootstrap-servers: localhost:9092 #</description></item></channel></rss>