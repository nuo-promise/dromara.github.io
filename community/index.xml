<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Communities on dromara(Open source organization)</title><link>/community/</link><description>Recent content in Communities on dromara(Open source organization)</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 28 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="/community/index.xml" rel="self" type="application/rss+xml"/><item><title>One year later, the dromara team released version 2.1.1 of the new architecture Hmily distributed transaction framework</title><link>/community/hmily-2.1.1/</link><pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate><guid>/community/hmily-2.1.1/</guid><description>Thank you guys for your support all the way, and keep everyone waiting. In this version, our team refactored the entire project, reasonably divided functional modules, added configuration centers, adjusted the underlying storage structure, solved difficult bugs, and supported other new features, and absorbed more outstanding open source community members to join in. Architecture Features High availability·:</description></item><item><title>Hmily distributed transaction restart monthly report</title><link>/community/hmily-restart/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>/community/hmily-restart/</guid><description>Hmily is a flexible distributed transaction architecture with high performance, high avalibility and ease to use. At present, it provides support for Dubbo, Spring-Cloud, Motan, GRPC and other RPC frameworks. In terms of ease of use, it provides zero-intrusive rapid integration of Spring-Boot and Spring-Namespace, with the goal of building a distributed transaction solution of financial level. Adjust Hmily architecture with more reasonable module partition Architecture: Architecture adjustment: Pull out</description></item><item><title>【Soul gateway version2.2.0 release】Make high-performance gateways so easy!</title><link>/community/soul-2.2.0/</link><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid>/community/soul-2.2.0/</guid><description>Let&amp;rsquo;s take a look at the new features first, and then I would like to share my story. Completely pluggable architecture design, plug-in hot swap. Fully supports all versions of Dubbo, Alibaba-Dubbo, Apache-Dubbo. Support Dubbo generalization call, multi-parameter, complex parameter interface. Enhance the monitor plug-in and remove the Influxdb, add metrics such as memory, CPU, QPS, TPS, response delay, and support access to Prometheus. The SpringCloud plugin supports Eureka and</description></item><item><title>How convenient is the 2.1.X version of Soul Gateway?</title><link>/community/soul-2.1.x/</link><pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate><guid>/community/soul-2.1.x/</guid><description>It has been a year since I open sourced Soul gateway in October last year, and received many suggestions from you guys in community. It has provided very rich functions after optimization, many of functions are highly cusmized, visualized, and highly extensible, now let&amp;rsquo;s make a summary. Plugin Provides various plug-ins, such as signature, monitoring, rate limiting, circuit breaker, Http proxy, Dubbo proxy, Websocket, etc. Support users to quickly develop</description></item><item><title>Soul Gateway released version 1.0.4-RELEASE</title><link>/community/soul-1.0.4/</link><pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate><guid>/community/soul-1.0.4/</guid><description>Soul Gateway released version 1.0.4-RELEASE Fix the bug that appeared in the Soul-admin of version 1.0.3. The serialization method supports custom extensions. The default serialization method has been changed from Kroy to Java serialization method. Dubbo support. Changes Dubbo usage In the previous version (1.0.2 or 1.0.3), the parameters of Dubbo are passed through the header, and in the 1.0.4 version it is passed through the body.</description></item><item><title>Hmily released 2.0.2-Release</title><link>/community/hmily-2.0.2/</link><pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate><guid>/community/hmily-2.0.2/</guid><description>Hmily released 2.0.2-Release Resolved the issue of SpringCloud using Hystrix to configure thread pool. New issue with SpringCloud embedded transaction calls.
Added Hmily load balancing strategy.
Other bug fixes and code optimizations.
Remove unnecessary third-party JAR packages.
Introduction of zero intrusion mode.
Hmily&amp;rsquo;s support for the popular RPC framework and Spring. Dubbo 2.7.0 for all versions below. SpringCloud Dalston and above, including support for Finchley and Greenwich</description></item></channel></rss>